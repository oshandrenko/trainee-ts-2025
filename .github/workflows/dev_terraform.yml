name: Terraform Workflow

on:
  schedule:
    - cron: '0 5 * * *'  # Ежедневно в 5:00 UTC (8:00 EEST)
    - cron: '0 15 * * *' # Ежедневно в 15:00 UTC (18:00 EEST)
  push:
    branches:
      - dev
    paths:
      - 'terraform/**'

env:
  WORK_START_HOUR: 5   # 8:00 EEST = 5:00 UTC
  WORK_END_HOUR: 15    # 18:00 EEST = 15:00 UTC
  TF_WORKING_DIR: terraform
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

jobs:
  check-time:
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    outputs:
      time_window: ${{ steps.check-time.outputs.TIME_WINDOW }}
    steps:
      - name: Check if within time window (EEST)
        id: check-time
        run: |
          CURRENT_HOUR=$(date -u +%H)
          if [ $CURRENT_HOUR -ge ${{ env.WORK_START_HOUR }} ] && [ $CURRENT_HOUR -lt ${{ env.WORK_END_HOUR }} ]; then
            echo "TIME_WINDOW=true" >> $GITHUB_OUTPUT
          else
            echo "TIME_WINDOW=false" >> $GITHUB_OUTPUT
          fi

  terraform-plan-apply:
    runs-on: ubuntu-latest
    needs: check-time
    if: |
      (github.event_name == 'schedule' && github.event.schedule == '0 5 * * *') ||
      (github.event_name == 'push' && needs.check-time.outputs.time_window == 'true')
    defaults:
      run:
        working-directory: ${{ env.TF_WORKING_DIR }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: dev


      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.13

      - name: Terraform Init
        run: terraform init

      - name: Terraform Plan
        id: plan
        run: terraform plan -out=plan.tfplan

      - name: Terraform Apply
        if: steps.plan.outcome == 'success'
        run: terraform apply -auto-approve plan.tfplan

  terraform-destroy:
    runs-on: ubuntu-latest
    if: github.event_name == 'schedule' && github.event.schedule == '0 15 * * *'
    defaults:
      run:
        working-directory: ${{ env.TF_WORKING_DIR }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: dev

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.13

      - name: Terraform Init
        run: terraform init

      - name: Terraform Plan
        id: plan
        run: terraform plan -out=plan.tfplan

      - name: Terraform Destroy
        if: steps.plan.outcome == 'success'
        run: terraform destroy -auto-approve
