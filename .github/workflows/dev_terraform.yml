name: Terraform Workflow

on:
  schedule:
    - cron: '0 5 * * *'  # Daily at 5:00 UTC (8:00 EEST) - Include infrastructure
    - cron: '0 15 * * *' # Daily at 15:00 UTC (18:00 EEST) - Exclude infrastructure
  push:
    branches:
      - dev
    paths:
      - 'terraform/**'
  workflow_dispatch:
    inputs:
      action:
        description: 'Select action: apply to include infrastructure, destroy to exclude it'
        required: true
        type: choice
        options:
          - apply
          - destroy

env:
  WORK_START_HOUR: 5   # 8:00 EEST = 5:00 UTC
  WORK_END_HOUR: 15    # 18:00 EEST = 15:00 UTC
  TF_WORKING_DIR: terraform
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

jobs:
  check-time-window:
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    outputs:
      within_window: ${{ steps.check.outputs.within_window }}
    steps:
      - name: Determine if within operational time window
        id: check
        run: |
          current_hour=$(date -u +%H)
          if [[ $current_hour -ge ${{ env.WORK_START_HOUR }} && $current_hour -lt ${{ env.WORK_END_HOUR }} ]]; then
            echo "within_window=true" >> $GITHUB_OUTPUT
          else
            echo "within_window=false" >> $GITHUB_OUTPUT
          fi

  terraform-apply:
    runs-on: ubuntu-latest
    needs: check-time-window
    if: |
      (github.event_name == 'schedule' && github.event.schedule == '0 5 * * *') ||
      (github.event_name == 'push' && needs.check-time-window.outputs.within_window == 'true') ||
      (github.event_name == 'workflow_dispatch' && inputs.action == 'apply')
    defaults:
      run:
        working-directory: ${{ env.TF_WORKING_DIR }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: dev

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.13

      - name: Initialize Terraform
        run: terraform init

      - name: Plan Terraform changes
        id: plan
        run: terraform plan -out=plan.tfplan

      - name: Apply Terraform changes
        if: steps.plan.outcome == 'success'
        run: terraform apply -auto-approve plan.tfplan

  terraform-destroy:
    runs-on: ubuntu-latest
    if: |
      (github.event_name == 'schedule' && github.event.schedule == '0 15 * * *') ||
      (github.event_name == 'workflow_dispatch' && inputs.action == 'destroy')
    defaults:
      run:
        working-directory: ${{ env.TF_WORKING_DIR }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: dev

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.13

      - name: Initialize Terraform
        run: terraform init

      - name: Plan Terraform destruction
        id: plan
        run: terraform plan -destroy -out=plan.tfplan

      - name: Apply Terraform destruction
        if: steps.plan.outcome == 'success'
        run: terraform apply -auto-approve plan.tfplan
